version: "3.3"
services:
  app1:
    build:
      context: ./bin
    volumes:
      - "./log:/go/bin/log"
    container_name: test_app
    ports:
      - "8081:8081"
    # 只有依赖服务启动并且通过了健康检查，这个服务才开始启动
    # This service starts only when the dependent service starts and passes the health check
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  postgres:
    build:
      context: ./db
    container_name: postgres1
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "root" ]
      timeout: 45s
      interval: 10s
      retries: 10
    restart: always
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=password
      - APP_DB_USER=app_user
      - APP_DB_PASS=app_pass
      - APP_DB_NAME=app_db
    ports:
      - 5432:5432
    volumes:
      #      - ./db:/docker-entrypoint-initdb.d/
      - ./data:/var/lib/postgresql/data

  redis:
    image: redis:7.0.2-alpine3.16
    restart: always
    container_name: redis1
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      timeout: 5s
      interval: 10s
      retries: 10
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81 # 密码password eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes:
      - ./cache:/data